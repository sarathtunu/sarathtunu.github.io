{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/employees/create-employee.component.css","webpack:///./src/app/employees/create-employee.component.html","webpack:///./src/app/employees/create-employee.component.ts","webpack:///./src/app/employees/list-employees.component.css","webpack:///./src/app/employees/list-employees.component.html","webpack:///./src/app/employees/list-employees.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class = \\\"container\\\">\\n  <nav class=\\\"nav navbar-default\\\">\\n    <ul class=\\\"nav navbar-nav\\\">\\n      <li routerLinkActive=\\\"active\\\"><a routerLink = \\\"list\\\">List</a></li>\\n      <li routerLinkActive=\\\"active\\\"><a routerLink = \\\"create\\\">Create</a></li>\\n    </ul>\\n  </nav>\\n  <router-outlet></router-outlet>\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'A7CRUD';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { FormsModule } from \"@angular/forms\";\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ListEmployeesComponent } from './employees/list-employees.component';\nimport { CreateEmployeeComponent } from './employees/create-employee.component';\n\n\nconst appRoutes : Routes = [\n    {path:\"list\", component: ListEmployeesComponent},\n    {path:\"create\", component: CreateEmployeeComponent},\n    {path:\"\", redirectTo:\"/list\", pathMatch:\"full\"},\n    \n];\n@NgModule({\n  declarations: [\n    AppComponent,\n    ListEmployeesComponent,\n    CreateEmployeeComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    RouterModule.forRoot(appRoutes),\n  //  BsDatepickerModule.forRoot()\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VtcGxveWVlcy9jcmVhdGUtZW1wbG95ZWUuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<form #empolyeeForm = \\\"ngForm\\\" (ngSubmit) = \\\"saveEmployee(employee)\\\">\\n  <div class=\\\"panel panel-primary\\\">\\n    <div class=\\\"panel-heading\\\">\\n      <h3 class = \\\"panel-title\\\">Create Empolyee</h3>\\n    </div>\\n    <div class=\\\"panel-body\\\">\\n      <div class=\\\"form-group\\\" [class.has-error] = 'name.invalid && name.touched'\\n      [class.has-success] = \\\"name.valid\\\">\\n        <label for=\\\"name\\\" class =\\\"control-label\\\">Full Name</label>\\n        <input id=\\\"name\\\" [(ngModel)] = \\\"employee.name\\\"  name=\\\"name\\\" type=\\\"text\\\" \\n          class = \\\"form-control\\\" required #name = \\\"ngModel\\\">        \\n        <span class=\\\"help-block\\\" *ngIf = \\\"name.invalid && name.touched\\\">Full Name Required</span>\\n      </div>\\n      <!---<div style=\\\"background: orange\\\"> touched : {{name.touched}} \\n            untouched: {{name.untouched}} <br>\\n            pristine: {{name.pristine}} \\n            dirty: {{name.dirty}} <br>\\n            valid: {{name.valid}}\\n            invalid: {{name.invalid}}\\n\\n      </div>\\n      <div style=\\\"background: orange\\\"> \\n        empolyeeForm touched : {{empolyeeForm.touched}} \\n        empolyeeForm untouched: {{empolyeeForm.untouched}} <br>\\n        empolyeeForm pristine: {{empolyeeForm.pristine}} \\n        empolyeeForm dirty: {{empolyeeForm.dirty}} <br>\\n        empolyeeForm valid: {{empolyeeForm.valid}}\\n        empolyeeForm invalid: {{empolyeeForm.invalid}}\\n\\n      </div> -->\\n      <!--\\\"^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\\\.[a-zA-Z0-9-.]+$\\\" pattern\\n          email for angular validation-->\\n      <div class=\\\"form-group\\\" [class.has-error] = \\\"email.invalid && email.touched\\\">\\n          <label for=\\\"email\\\" class=\\\"control-label\\\">Email</label>\\n          <input id=\\\"email\\\" type=\\\"text\\\" class = \\\"form-control\\\" \\n          [(ngModel)] = \\\"employee.email\\\" name=\\\"email\\\" required \\n          pattern=\\\"^[a-zA-Z0-9_.+-]+@(?:(?:[a-zA-Z0-9-]+\\\\.)?[a-zA-Z]+\\\\.)?(danishtech)\\\\.com$\\\"\\n          \\n          #email=\\\"ngModel\\\"\\n          >\\n          <span class=\\\"help-block\\\" *ngIf = \\\"email.errors?.required && email.touched\\\">Email is required</span>\\n          <span class=\\\"help-block\\\" *ngIf = \\\"email.errors?.pattern && email.touched\\\">Email is invalid</span>\\n          \\n      </div>\\n      <div class=\\\"form-group\\\" [class.has-error] = \\\"phoneNumber.touched && phoneNumber.invalid\\\"> \\n          <label for=\\\"phoneNumber\\\" class=\\\"control-label\\\">Phone Number</label>\\n          <input id=\\\"phoneNumber\\\" type=\\\"text\\\" class = \\\"form-control\\\" \\n          [(ngModel)] = \\\"employee.phoneNumber\\\" name=\\\"phoneNumber\\\"\\n          required #phoneNumber=\\\"ngModel\\\">\\n          <span class=\\\"help-block\\\" *ngIf = \\\"phoneNumber.touched && phoneNumber.errors?.required\\\">\\n            Phone Number is required</span>\\n      </div>\\n      <div class=\\\"form-group\\\" [class.has-error] = \\\"contactPreference.touched && contactPreference.invalid\\\">\\n        <label class='control-label'>Contact Preference</label>\\n        <div class=\\\"form-control\\\">\\n          <label class=\\\"radio-inline\\\" for=\\\"cPhone\\\">\\n          <input type=\\\"radio\\\" name=\\\"contactPreference\\\" [(ngModel)] = \\\"employee.contactPreference\\\" \\n          id = \\\"cPhone\\\" value=\\\"Phone\\\" #contactPreference=\\\"ngModel\\\" required>Phone\\n          </label>\\n          <label class=\\\"radio-inline\\\" for=\\\"cEmail\\\">\\n            <input type=\\\"radio\\\" [(ngModel)] = \\\"employee.contactPreference\\\" id = \\\"cEmail\\\" \\n            name=\\\"contactPreference\\\" value=\\\"Email\\\" #contactPreference=\\\"ngModel\\\" required>Email\\n          </label>\\n          <span class = \\\"help-block\\\" *ngIf = \\\"contactPreference.touched && contactPreference.invalid\\\">Contact Preference is required</span>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\" [class.has-error] = \\\"gender.touched && gender.invalid\\\">\\n        <label class=\\\"control-label\\\">Gender</label>\\n        <div class=\\\"form-control\\\" >          \\n          <label for=\\\"Male\\\" class = \\\"radio-inline\\\"> \\n            <input id=\\\"Male\\\" type=\\\"radio\\\"  [(ngModel)] = \\\"employee.gender\\\" name=\\\"gender\\\" value =\\\"Male\\\"\\n            #gender = \\\"ngModel\\\" required>Male            \\n          </label>\\n          <label for=\\\"Female\\\" class = \\\"radio-inline\\\"> \\n            <input id=\\\"Female\\\" type=\\\"radio\\\"  [(ngModel)] = \\\"employee.gender\\\" name=\\\"gender\\\" value =\\\"Female\\\"\\n            #gender = \\\"ngModel\\\" required>Female            \\n          </label>\\n          <span class=\\\"help-block\\\" *ngIf = \\\"gender.touched && gender.invalid\\\">Gender is required</span>\\n        </div>  \\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <div class=\\\"form-control\\\">\\n          <label name = \\\"isActive\\\" class=\\\"checkbox-inline\\\">\\n            <input type=\\\"checkbox\\\"  id=\\\"isActive\\\" [(ngModel)]=\\\"employee.isActive\\\" name=\\\"isActive\\\" >is Active\\n          </label>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\" [class.has-error] = \\\"department.touched && department.invalid\\\">\\n        <label for=\\\"department\\\" class=\\\"control-label\\\">Department</label>\\n        <select id=\\\"department\\\" class=\\\"form-control\\\" name = \\\"department\\\" [(ngModel)] = \\\"employee.department\\\"\\n          required #department = \\\"ngModel\\\">\\n          <option value =\\\"-1\\\">Select Department</option>\\n          <option *ngFor = \\\"let department of departments\\\" value = \\\"department.id\\\">{{department.name}}</option>\\n        </select>\\n        <span class=\\\"help-block\\\" *ngIf = \\\"department.touched && department.invalid\\\">Department is required</span>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"dOB\\\">Date of Birth</label>\\n        <input type =\\\"date\\\" class=\\\"form-control\\\" id=\\\"doB\\\" name=\\\"doB\\\" [(ngModel)] = \\\"employee.dateOfBirth\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"photoPath\\\">Photo Path</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"photoPath\\\" name=\\\"photoPath\\\" [(ngModel)] = \\\"employee.photoPath\\\">\\n        \\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <button type = \\\"button\\\" (click) = \\\"togglePreviewPhoto()\\\" class=\\\"btn btn-primary\\\">{{buttonValue}} Preview</button>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <img [src]='employee.photoPath' height=\\\"200px\\\" width=\\\"200px\\\" *ngIf = \\\"previewPhoto\\\">\\n      </div>\\n    </div>\\n    <div class = \\\"panel-footer\\\">\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled] = \\\"empolyeeForm.invalid\\\">Save</button>\\n    </div>\\n  </div>\\n</form>\\n\\nAngular Generated Form Model : {{empolyeeForm.value | json}}\\n<br>\\n<br>\\nEmployee output : {{employee | json}}\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport {Department} from \"../models/department.model\";\nimport { Employee } from \"../models/employee.module\";\n\n@Component({\n  templateUrl: './create-employee.component.html',\n  styleUrls: ['./create-employee.component.css'],\n  \n  \n})\nexport class CreateEmployeeComponent implements OnInit {\n  buttonValue:string = \"Show\";\n  previewPhoto:boolean = false;\n\n  employee :Employee = {\n    id: null, \n    name: null, \n    gender: null, \n    email: null,\n    phoneNumber: null,\n    contactPreference:null,\n    dateOfBirth: null,\n    department: \"-1\",\n    isActive: null,\n    photoPath: null\n  }\n  departments: Department[] =\n  [\n    { id: 1, name: \"Help Desk\"},\n    { id: 2, name: \"HR\"},\n    { id: 3, name: \"IT\"},\n    { id: 4, name: \"Payroll\"},\n    { id: 5, name: \"Admin\"},\n  ];\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  saveEmployee(newEmployee: Employee){\n    //console.log(this.employee);\n    console.log(newEmployee);\n  }\n  togglePreviewPhoto(){\n    this.previewPhoto = (!this.previewPhoto);\n    this.buttonValue = (this.buttonValue == \"Show\") ? \"Hide\" : \"Show\"\n  }\n}\n","module.exports = \".imageClass {\\r\\n    height: 200px;\\r\\n    widows: 200px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZW1wbG95ZWVzL2xpc3QtZW1wbG95ZWVzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxjQUFjO0lBQ2QsY0FBYztDQUNqQiIsImZpbGUiOiJzcmMvYXBwL2VtcGxveWVlcy9saXN0LWVtcGxveWVlcy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmltYWdlQ2xhc3Mge1xyXG4gICAgaGVpZ2h0OiAyMDBweDtcclxuICAgIHdpZG93czogMjAwcHg7XHJcbn0iXX0= */\"","module.exports = \"<div class=\\\"panel panel-primary\\\" *ngFor = \\\"let employee of employees\\\">\\n  <div class=\\\"panel-heading\\\">\\n    <h3 class=\\\"panel-title\\\">{{employee.name}}</h3>\\n  </div>\\n  <div class=\\\"panel-body\\\">\\n      <div class=\\\"col-xs-10\\\">\\n        <div class=\\\"row vertical-align\\\">\\n          <div class=\\\"col-xs-4\\\">\\n            <img class = \\\"imageClass\\\" [src] = 'employee.photoPath'>\\n          </div>\\n          <div class=\\\"col-xs-8\\\">\\n            <div class = \\\"row\\\">\\n              <div class = \\\"col-xs-6\\\">\\n                Gender\\n              </div>\\n              <div class = \\\"col-xs-6\\\">\\n                : {{employee.gender}}\\n              </div>\\n              <div class = \\\"col-xs-6\\\">\\n                Date of Birth\\n              </div>\\n              <div class = \\\"col-xs-6\\\">\\n                    : {{employee.dateOfBirth | date}}\\n              </div>\\n              <div class = \\\"col-xs-6\\\">\\n                Contract Preference      \\n              </div>\\n              <div class = \\\"col-xs-6\\\">\\n                : {{employee.contactPreference}}\\n              </div>\\n              <div class = \\\"col-xs-6\\\">\\n                Phone\\n              </div>\\n              <div class = \\\"col-xs-6\\\">\\n                  : {{employee.phoneNumber}}\\n              </div>\\n              <div class = \\\"col-xs-6\\\">\\n                Email\\n              </div>\\n              <div class = \\\"col-xs-6\\\">\\n                : {{employee.email}}\\n              </div>\\n              <div class = \\\"col-xs-6\\\">\\n                Department\\n              </div>\\n              <div class = \\\"col-xs-6\\\">\\n                : {{employee.department}}\\n              </div>    \\n              <div class = \\\"col-xs-6\\\">\\n                is Active\\n              </div>\\n              <div class = \\\"col-xs-6\\\">\\n                : {{employee.isActive}}\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Employee } from '../models/employee.module';\n\n@Component({\n  templateUrl: './list-employees.component.html',\n  styleUrls: ['./list-employees.component.css']\n})\nexport class ListEmployeesComponent implements OnInit {\n  employees: Employee[] = [\n    {\n      id: 1,\n      name: 'Mark',\n      gender: 'Male',\n      contactPreference: 'Email',\n      email: 'mark@pragimtech.com',\n      dateOfBirth: new Date('10/25/1988'),\n      department: 'IT',\n      isActive: true,\n      photoPath: 'assets/images/mark.png'\n    },\n    {\n      id: 2,\n      name: 'Mary',\n      gender: 'Female',\n      contactPreference: 'Phone',\n      phoneNumber: 2345978640,\n      dateOfBirth: new Date('11/20/1979'),\n      department: 'HR',\n      isActive: true,\n      photoPath: 'assets/images/mary.png'\n    },\n    {\n      id: 3,\n      name: 'John',\n      gender: 'Male',\n      contactPreference: 'Phone',\n      phoneNumber: 5432978640,\n      dateOfBirth: new Date('3/25/1976'),\n      department: 'IT',\n      isActive: false,\n      photoPath: 'assets/images/john.png'\n    },\n  ];\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}